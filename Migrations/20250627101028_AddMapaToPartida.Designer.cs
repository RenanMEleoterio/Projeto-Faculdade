// <auto-generated />
using System;
using ControleCampeonato.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleCampeonato.Migrations
{
    [DbContext(typeof(ControleCampeonatoContext))]
    [Migration("20250627101028_AddMapaToPartida")]
    partial class AddMapaToPartida
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("ControleCampeonato.Models.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("ControleCampeonato.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("ControleCampeonato.Models.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mapa")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("ControleCampeonato.Models.PontuacaoEquipe", b =>
                {
                    b.Property<int>("IdPartida")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEquipe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Colocacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PontosColocacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalKills")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPartida", "IdEquipe");

                    b.HasIndex("IdEquipe");

                    b.ToTable("PontuacoesEquipes");
                });

            modelBuilder.Entity("ControleCampeonato.Models.PontuacaoJogador", b =>
                {
                    b.Property<int>("IdPartida")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdJogador")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assistencias")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Dano")
                        .HasColumnType("REAL");

                    b.Property<int>("IdEquipe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mortes")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPartida", "IdJogador");

                    b.HasIndex("IdEquipe");

                    b.HasIndex("IdJogador");

                    b.ToTable("PontuacoesJogadores");
                });

            modelBuilder.Entity("ControleCampeonato.Models.Jogador", b =>
                {
                    b.HasOne("ControleCampeonato.Models.Equipe", "Equipe")
                        .WithMany("Jogadores")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("ControleCampeonato.Models.PontuacaoEquipe", b =>
                {
                    b.HasOne("ControleCampeonato.Models.Equipe", "Equipe")
                        .WithMany("Pontuacoes")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleCampeonato.Models.Partida", "Partida")
                        .WithMany("PontuacoesEquipes")
                        .HasForeignKey("IdPartida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("ControleCampeonato.Models.PontuacaoJogador", b =>
                {
                    b.HasOne("ControleCampeonato.Models.Equipe", "Equipe")
                        .WithMany()
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleCampeonato.Models.Jogador", "Jogador")
                        .WithMany("Pontuacoes")
                        .HasForeignKey("IdJogador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleCampeonato.Models.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("IdPartida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("Jogador");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("ControleCampeonato.Models.Equipe", b =>
                {
                    b.Navigation("Jogadores");

                    b.Navigation("Pontuacoes");
                });

            modelBuilder.Entity("ControleCampeonato.Models.Jogador", b =>
                {
                    b.Navigation("Pontuacoes");
                });

            modelBuilder.Entity("ControleCampeonato.Models.Partida", b =>
                {
                    b.Navigation("PontuacoesEquipes");
                });
#pragma warning restore 612, 618
        }
    }
}
